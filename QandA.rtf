{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri-340\partightenfactor0

\f0\fs24 \cf0 1. Difference between a Class and an Object?\
\
Class\
1. Class is the blueprint of an object. It is used to declare and create objects.\
2. No memory is allocated when a class is declared.\
3. A class is a group of similar objects.\
4. Class is a logical entity.\
5. Class can only be declared\'a0once.\
Object\
1. Object is an instance of class.\
2. Memory is allocated as soon as an object is created.\
3. Object is a\'a0real-world entity\'a0such as book, car, etc.\
4. Object is a physical entity.\
5. Object can be created\'a0many times.\
\
2. What is Overloading and its uses?\
\
 Overloading refers to\'a0the ability to use a single identifier to define multiple methods of a class that differ in\'a0their input and output parameters.\
      It is used to avoid redundant code where the same method name is used multiple times but with a different set of parameters.\
\
3. What is Overriding and its uses?\
\
The concept of subclass inheriting the method from the superclass and changing the method definition by keeping the same declaration is known as overriding and it is related to run time polymorphism.\
It is used to keep the same method name and different statements\
\
4. What is the difference between Overloading and Overriding?\
\
OVERLOADING\
1.Overloading is used\'a0to increase the readability of program.\
2.It is performed within a class.\
3.It has different parameters.\
4.Overloading is example for compile time polymorphism.\
OVERRIDING\
\pard\pardeftab720\ri-857\partightenfactor0
\cf0 1.Overriding is used\'a0to provide the specific implementation\'a0of the method that is already provided by its super class.\
\pard\pardeftab720\ri-340\partightenfactor0
\cf0 2.It is used in two classes  have IS-A (inheritance) relationship.\
3.It has same parameters.\
4.Overriding is example for run time polymorphism\
\
\
5. What is an Abstract class?\
      An Abstract class is created by the keyword abstract. we cannot create an object for an abstract class ,however we can access properties of abstract class through inheritance and overriding.\
\
6. What is an Interface? When and how can we use Interface in Java?\
      An interface is a pure abstract body used to achieve full abstraction.\
      All data members in an interface are public static and final. All member functions in an interface are public and abstract, we cannot create an object for an interface.\
      However, we can access the properties of an interface through inheritance and overriding.\
\
\
}